package com.mrburgerus.betaplus.world.biome;

import com.mrburgerus.betaplus.util.ConfigBetaPlus;
import com.mrburgerus.betaplus.world.beta_plus.BetaPlusGenSettings;
import com.mrburgerus.betaplus.world.beta_plus.sim.BetaPlusSimulator;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.Biomes;
import sun.security.krb5.Config;

import java.util.ArrayList;

// New Biome Selector, works on a more sophisticated data set
public class BetaPlusBiomeSelectorNew
{
	// FIELDS //
	private static ArrayList<Biome> frozenBiomes; // Biomes below Frozen Threshold
	private static ArrayList<Biome> frozenHillBiomes; // Frozen Hilly Biomes
	private static ArrayList<Biome> coldBiomes; // Cold Biomes
	// Threshold values
	private static final double frozenThreshold = 0.1; // PLACEHOLDER
	private static final double coldThreshold = ConfigBetaPlus.coldTh;
	private static final double hotThreshold = 0.85; // PLACEHOLDER

	private static final double dryThreshold = 0.25;


	// METHODS //

	// selected is usually randomly generated by the Voronoi generator and passed in
	// isHilly determines which list to use
	public static Biome getBiome(float temperature, float humidity, double selected, boolean isHilly)
	{
		// Get the biome from a Temperature and Humidity value, as well as a "selected" from list value.

		if (isHilly)
		{
			// If frozen, humdity does not matter
			if (temperature < frozenThreshold)
			{
				// Scale it to size
				selected *= frozenHillBiomes.size();
				return frozenHillBiomes.get((int) selected);
			}
			// If cold, there are a few more options
			if (temperature < coldThreshold)
			{
				if (humidity < dryThreshold)
				{
					// TEMPORARY
					selected *= 1;
					return Biomes.PLAINS;
				}
			}
			// Now check Hot values, which are typically Jungle or Desert type.
		}
		else
		{
			// Repeat above, but with non-hilly biomes

		}
		return Biomes.PLAINS;
	}

	// Gets an Island Biome from the registered list.
	// Primarily, this gives Mushroom islands / Regular Biomes in vanilla
	public static Biome getIslandBiome(float temperature, float humidity, int selected)
	{
		return Biomes.MUSHROOM_FIELDS;
	}
}
